# ucitavanje potrebnih prethodno instaliranih bibilioteka

library(rtweet)
library(httpuv)
library(tidyr)
library(visNetwork)
library(igraph)
library(ggplot2)

# postavljanje Twitter kredencijala koji se cuvaju u lokalnoj promenljivoj env
# radi prikupljanja tvitova koristeci Twitter API
access_token <- env.accessToken
access_token_secret <- env.accessTokenSecret
api_key <- env.apiKey
api_secret_key <- env.apiSecretKey
token <- create_token(
app = "snafon",
consumer_key = api_key,
consumer_secret = api_secret_key,
access_token = access_token,
access_secret = access_token_secret)
get_token()

saveRDS(token, "rtweet.rds")

# prikpuljanje tvitova sa hashtag-om utisak i utisakNedelje
# koji su tvitovani 10. maja 2020.
# iskljucujuci retvitovane tvitove
hashtagsUtisak <- c("#utisak", "#utisaknedelje")
qHashtagsUtisakOr <- paste(hashtagsUtisak, collapse = " OR ")

utisak_10_tweets <- search_tweets(q = qHashtagsUtisakOr,
since="2020-05-10",
n = 3000,
include_rts = FALSE)

# isti postupak se ponavlja i za hashtag hitTvit
hittvit_10_tweets <- search_tweets(q =  "#hittvit",
type = 'recent',
n = 3000,
include_rts = FALSE)

saveRDS(utisak_10_tweets, 'data/utisak_may_10_tweets.RData')
saveRDS(hittvit_10_tweets, 'data/hittvit_may_10_tweets.RData')

utisak_10_tweets <- readRDS("data/utisak_may_10_tweets.RData")
hittvit_10_tweets <- readRDS("data/hittvit_may_10_tweets.RData")

library(rtweet)
library(httpuv)
library(tidyr)
library(visNetwork)
library(igraph)
library(ggplot2)
library(visNetwork)
library(dplyr)
# pocetak

# mreza UN
# rad sa grafovima
# biramo samo relevantne kolone
utisak10tweets_users <- utisak_10_tweets %>%
select(screen_name, reply_to_screen_name, mentions_screen_name) %>%
rename(sender=screen_name, replied_to=reply_to_screen_name, mentioned=mentions_screen_name)
glimpse(utisak10tweets_users)
# Neke vrednosti 'replied_to' i 'mentioned' ne postoje, proveravamo koliko ih je takvih:
length(which(is.na(utisak10tweets_users$replied_to)==TRUE))
length(which(is.na(utisak10tweets_users$mentioned)))
# Uzimamo samo tvitove u kojima je neko odgovorio drugom korisniku
# ili ga spomenuo
utisak10tweets_users <- utisak10tweets_users %>%
filter( is.na(replied_to)==FALSE | is.na(mentioned)==FALSE )
View(utisak10tweets_users)
nrow(utisak10tweets_users)
# radimo operaciju unnest za kolonu 'mentioned'
# Svaki element liste ide u nov red operacijom unnest
utisak10tweets_users <- unnest(utisak10tweets_users, mentioned)
View(utisak10tweets_users)
# Pretvaramo utisak10tweets_users u dataframe zbog daljeg rada sa grafovima
# Pravimo 2 edge liste: jednu za relaciju 'reply_to' drugu za relaciju 'mentioned'
replied_to_edgelist_utisak <- utisak10tweets_users %>%
select(-mentioned) %>%              # bez kolone 'mentioned'
filter(complete.cases(.)) %>%       # iskljucimo redove koji nemaju vrednost, tj. Imaju vrednost NA
group_by(sender, replied_to) %>%    # redovi se spajaju po vrednostima sender I replied_to
summarise(weight = n()) %>%         # kolika je velicina svake grupe (veza izmedju kolona sender I replied_to)
ungroup()
head(replied_to_edgelist_utisak, n=10)
# izmedju kojih parova cvorova je komunikacija najveca (sortiramo po velicini grupe tj. weight):
replied_to_edgelist_utisak %>%
arrange(desc(weight)) %>%
head(n=10)
# isto radimo za kolonu 'mentioned'
mentioned_edgelist_utisak <- utisak10tweets_users %>%
select(-replied_to) %>%
filter(complete.cases(.)) %>%
group_by(sender, mentioned) %>%
summarise(weight = n()) %>%
ungroup()
head(mentioned_edgelist_utisak, n=10)
# gde se najcesce vidi ova veza (sortiranje po vrednosti weight):
mentioned_edgelist_utisak %>%
arrange(desc(weight)) %>%
head(n=10)
# Cvorovi u mrezama su jedinstvene vrednosti za korisnike
# jedinstvene vrednosti u replied_to edgelist
reply_to_unique_utisak <- union(replied_to_edgelist_utisak$sender, replied_to_edgelist_utisak$replied_to)
reply_to_unique_utisak <- with(replied_to_edgelist_utisak, union(sender, replied_to))
length(reply_to_unique_utisak)
# jedinstvene vrednosti u mentioned edgelist
mention_unique_utisak <- with(mentioned_edgelist_utisak, union(sender, mentioned))
length(mention_unique_utisak)
summary(replied_to_edgelist_utisak$weight)
summary(mentioned_edgelist_utisak$weight)
# Dodajemo jos podataka o korisnicima (senders).
# Neke smo vec dobili (utisak_10_tweets)
glimpse(utisak_10_tweets)
all_senders_utisak <- union(mentioned_edgelist_utisak$sender,
replied_to_edgelist_utisak$sender)
senders_data_utisak <- utisak_10_tweets %>%
filter(screen_name %in% all_senders_utisak) %>%
users_data() %>%                          # funkcija paketa rtweet za uzimanje podataka iz dataset-a
distinct(user_id, .keep_all = TRUE)
glimpse(senders_data_utisak)
# Skupljamo podatke za “alters”, tj. korisnike koji su mentioned / replied_to
# za koje alters nemamo podatke
no_data_alters_utisak <- setdiff(union(mention_unique_utisak, reply_to_unique_utisak), all_senders_utisak)
length(no_data_alters_utisak)
# koristimo funkciju paketa rtweet lookup_users da prikupimo podatke o njima
alters_data_utisak <- lookup_users(no_data_alters_utisak)
# cuvamo ove podatke
saveRDS(alters_data_utisak, "data/utisak_alters_data_utisak_22-01-2019.RData")
glimpse(alters_data_utisak)
# uzimamo samo podatke o korisnicima, bez njihovih tvitova
# prethodna funkcija je vratila I tvitova korisnika
alters_data_utisak <- users_data(alters_data_utisak)
# provera da li nekome fale podaci
missing_alter_utisak <- setdiff(no_data_alters_utisak, alters_data_utisak$screen_name)
length(missing_alter_utisak)
mentioned_edgelist_utisak %>%
filter(!mentioned %in% missing_alter_utisak) %>%
rename(ego=sender, alter=mentioned, mention_tie=weight) %>%
saveRDS(file = "data/mentions_edgelist_#utisak_26-01-2019.RData")
replied_to_edgelist_utisak %>%
filter(!replied_to %in% missing_alter_utisak) %>%
rename(ego=sender, alter=replied_to, reply_to_tie=weight) %>%
saveRDS(file = "data/replied_to_edgelist_utisak_#utisak_26-01-2019.RData")
saveRDS(senders_data_utisak, file = "data/ego_data_#utisak_26-01-2019.RData")
saveRDS(alters_data_utisak, file = "data/alter_data_#utisak_26-01-2019.RData")
##
# MREZE KORISNIKA na osnovu relacije mentioned
##
# edge list za pravljenje mreze na osnovu relacije 'mentioned'
mention_edgelist_utisak <- readRDS("data/mentions_edgelist_#utisak_26-01-2019.RData")
summary(mention_edgelist_utisak$mention_tie)
# pravimo usmerenu mrezu (directed net)
mention_net_utisak <- graph_from_data_frame(mention_edgelist_utisak)
summary(mention_net_utisak)
# proveravamo gustinu mreze
edge_density(mention_net_utisak)
plot(mention_net_utisak,
layout = layout_with_lgl(mention_net_utisak),
edge.arrow.size=0.3,
vertex.size = 5,
vertex.label = NA)
# dodajemo neke nove vrednosti cvorovima
# pravimo funkciju get_user_attrs() koja prima:
# 1) podatke o korisnicima dobijene funkcijom paketa rtweet users_data(),
# 2) vector korisnickih imena onih korisnika koji su nam relevantni
# funkcija vraca data frame od 4 promenljive (kolone):
# screen_name, followers_count, friends_count, and statuses_count
get_user_attrs <- function(twitter_user_data, users_screen_names) {
twitter_user_data %>%
filter(screen_name %in% users_screen_names) %>%
select(screen_name, followers_count, friends_count, statuses_count)
}
# ucitamo podatke o senders: potrebno za dodavanje atributa cvorovima koji su izvori
senders_data_utisak <- readRDS("data/ego_data_#utisak_26-01-2019.RData")
ego_attrs_mentioned_utisak <- get_user_attrs(senders_data_utisak, V(mention_net_utisak)$name)
glimpse(ego_attrs_mentioned_utisak)
# isto I za alters: one korisnike koji su spomenuti u tvitu onih koji su senders
alters_data_utisak <- readRDS("data/alter_data_#utisak_26-01-2019.RData")
alter_attrs_mentioned_utisak <- get_user_attrs(alters_data_utisak, V(mention_net_utisak)$name)
glimpse(alter_attrs_mentioned_utisak)
# dodeljujemo attribute onima koji su u mrezi 'mentioned'
node_attrs_mentioned_utisak <- rbind(ego_attrs_mentioned_utisak, alter_attrs_mentioned_utisak) %>% # spoj dataframe-ova
distinct(screen_name, .keep_all = TRUE) %>% # uzimamo samo redove koji nemaju duplicate tj. jedinstveni su
arrange(screen_name) # sortiranje prema korisnickom imenu
head(node_attrs_mentioned_utisak, n=10)
summary(node_attrs_mentioned_utisak[,-1])
# attribute koji su vektori postavimo najpre na 0
V(mention_net_utisak)$followers_cnt <- rep(0, vcount(mention_net_utisak))
V(mention_net_utisak)$friends_cnt <- rep(0, vcount(mention_net_utisak))
V(mention_net_utisak)$posts_cnt <- rep(0, vcount(mention_net_utisak))
for (i in 1:vcount(mention_net_utisak)) {
index <- which(node_attrs_mentioned_utisak$screen_name == V(mention_net_utisak)$name[i])
V(mention_net_utisak)$followers_cnt[i] <- node_attrs_mentioned_utisak$followers_count[index]
V(mention_net_utisak)$friends_cnt[i] <- node_attrs_mentioned_utisak$friends_count[index]
V(mention_net_utisak)$posts_cnt[i] <- node_attrs_mentioned_utisak$statuses_count[index]
}
summary(mention_net_utisak)
summary(V(mention_net_utisak)$followers_cnt)
# koristimo funkciju sa SNA kursa
# ona pravi cvorove na grafu tako da su velicinom proprcionalni broju pratilaca korisnika
source('SNA_custom_functions.R')
friends_for_color_mentioned_utisak <- attr_based_color_gradient(log1p(V(mention_net_utisak)$friends_cnt),
c('gold','steelblue3'))
# vector na osnovu broja pratilaca za racunanje velicine cvora
followers_for_size_mentioned_utisak <- log1p(V(mention_net_utisak)$followers_cnt)
# plot
plot(mention_net_utisak,
layout = layout_with_lgl(mention_net_utisak),
edge.arrow.size=0.3,
vertex.label = NA,
vertex.size = followers_for_size_mentioned_utisak,
vertex.color = friends_for_color_mentioned_utisak,
main = "Mreza UN na tviteru: boja cvora oznacava broj prijatelja, a velicina broj pratilaca")
library(visNetwork)
#
# VISNETWORK: vizualizacija mreze mentioned za utisak nedelje
#
m_net_comp_utisak <- components(mention_net_utisak, mode = 'weak')
str(m_net_comp_utisak)
# najveca komponenta:
giant_comp_mentioned_utisak_size_mentioned_utisak <- max(m_net_comp_utisak$csize)
giant_comp_mentioned_utisak_index_mentioned_utisak <- which(m_net_comp_utisak$csize == giant_comp_mentioned_utisak_size_mentioned_utisak)
# izdvajamo najvecu komponentu iz grafa mention_net_utisak
giant_comp_mentioned_utisak <- induced_subgraph(mention_net_utisak,
vids = V(mention_net_utisak)[m_net_comp_utisak$membership==giant_comp_mentioned_utisak_index_mentioned_utisak])
summary(giant_comp_mentioned_utisak)
is_connected(giant_comp_mentioned_utisak, mode = 'weak')
# koristimo attribute friends_cnt i followers_cnt i njihove boje i velicine
gc_colors_mentioned_utisak <- attr_based_color_gradient(log1p(V(giant_comp_mentioned_utisak)$friends_cnt), c('gold','steelblue3'))
gc_size_mentioned_utisak <- log1p(V(giant_comp_mentioned_utisak)$followers_cnt)
set.seed(2501)
plot(giant_comp_mentioned_utisak,
layout = layout_with_dh(giant_comp_mentioned_utisak),
edge.arrow.size=0.3,
vertex.label = NA,
vertex.size = gc_size_mentioned_utisak,
vertex.color = gc_colors_mentioned_utisak,
main = "Najveca komponenta u mrezi mentioned za Utisak nedelje")
# vizualizacija grafa
nodes_df_mentioned_utisak <- data.frame(id=V(giant_comp_mentioned_utisak)$name, stringsAsFactors = FALSE)
head(nodes_df_mentioned_utisak)
edges_df_mentioned_utisak <- data.frame(as_edgelist(giant_comp_mentioned_utisak), stringsAsFactors = FALSE)
colnames(edges_df_mentioned_utisak) <- c('from', 'to')
visNetwork(nodes = nodes_df_mentioned_utisak, edges = edges_df_mentioned_utisak,
main="Najveca komponenta mentioned mreze za Utisak nedelje")
#
nodes_df_mentioned_utisak$color <- gc_colors_mentioned_utisak
nodes_df_mentioned_utisak$size <- 12 + gc_size_mentioned_utisak
head(nodes_df_mentioned_utisak)
#
edges_df_mentioned_utisak$width <- 1 + (E(giant_comp_mentioned_utisak)$mention_tie / 3)
edges_df_mentioned_utisak$color <- 'slategray3'
edges_df_mentioned_utisak$smooth <- TRUE
edges_df_mentioned_utisak$arrows <- 'to'
head(edges_df_mentioned_utisak)
visNetwork(nodes = nodes_df_mentioned_utisak,
edges = edges_df_mentioned_utisak,
main="Najveca komponenta mentioned mreze za Utisak nedelje ",
footer = "Boja oznacava broj prijatelja, a velicina cvora broj pratilaca")
nodes_df_mentioned_utisak$shadow <- FALSE
nodes_df_mentioned_utisak$title <- nodes_df_mentioned_utisak$id
nodes_df_mentioned_utisak$borderWidth <- 1.5
nodes_df_mentioned_utisak <- nodes_df_mentioned_utisak %>% select(-color)
nodes_df_mentioned_utisak$color.background <- gc_colors_mentioned_utisak
nodes_df_mentioned_utisak$color.border <- "black"
nodes_df_mentioned_utisak$color.highlight.background <- "orange"
nodes_df_mentioned_utisak$color.highlight.border <- "darkred"
visnet <- visNetwork(nodes = nodes_df_mentioned_utisak, edges = edges_df_mentioned_utisak,
main="Najveca komponenta mentioned mreze za Utisak nedelje",
footer = "Boja oznacava broj prijatelja, a velicina cvora broj pratilaca")
visnet
#
# MREZE KORISNIKA na osnovu relacije replied_to
##
# edge list za pravljenje mreze na osnovu relacije 'replied_to'
replied_to_edgelist_utisak <- readRDS("data/replied_to_edgelist_utisak_#utisak_26-01-2019.RData")
summary(replied_to_edgelist_utisak$reply_to_tie)
# pravimo usmerenu mrezu (directed net)
replied_to_net_utisak <- graph_from_data_frame(replied_to_edgelist_utisak)
summary(replied_to_net_utisak)
# proveravamo gustinu mreze
edge_density(replied_to_net_utisak)
plot(replied_to_net_utisak,
layout = layout_with_lgl(replied_to_net_utisak),
edge.arrow.size=0.3,
vertex.size = 5,
vertex.label = NA)
# dodajemo neke nove vrednosti cvorovima
# koristimo prethodno napravljenu funkciju get_user_attrs() koja prima:
# 1) podatke o korisnicima dobijene funkcijom paketa rtweet users_data(),
# 2) vektor korisnickih imena onih korisnika koji su nam relevantni
# funkcija vraca data frame od 4 promenljive (kolone):
# screen_name, followers_count, friends_count, and statuses_count
# ucitamo podatke o senders: potrebno za dodavanje atributa cvorovima koji su izvori
senders_data_utisak <- readRDS("data/ego_data_#utisak_26-01-2019.RData")
ego_attrs_replied_to_utisak <- get_user_attrs(senders_data_utisak, V(replied_to_net_utisak)$name)
glimpse(ego_attrs_replied_to_utisak)
# isto i za alters: one korisnike kojima je odgovoreno u tvitu
alters_data_utisak <- readRDS("data/alter_data_#utisak_26-01-2019.RData")
alter_attrs_replied_to_utisak <- get_user_attrs(alters_data_utisak, V(replied_to_net_utisak)$name)
glimpse(alter_attrs_replied_to_utisak)
# dodeljujemo attribute onima koji su u mrezi 'replied_to_net'
node_attrs_replied_to_utisak <- rbind(ego_attrs_replied_to_utisak, alter_attrs_replied_to_utisak) %>% # spoj dataframe-ova
distinct(screen_name, .keep_all = TRUE) %>% # uzimamo samo redove koji nemaju duplicate tj. jedinstveni su
arrange(screen_name) # sortiranje prema korisnickom imenu
head(node_attrs_replied_to_utisak, n=10)
summary(node_attrs_replied_to_utisak[,-1])
# attribute koji su vektori postavimo najpre na 0
V(replied_to_net_utisak)$followers_cnt <- rep(0, vcount(replied_to_net_utisak))
V(replied_to_net_utisak)$friends_cnt <- rep(0, vcount(replied_to_net_utisak))
V(replied_to_net_utisak)$posts_cnt <- rep(0, vcount(replied_to_net_utisak))
for (i in 1:vcount(replied_to_net_utisak)) {
index <- which(node_attrs_replied_to_utisak$screen_name == V(replied_to_net_utisak)$name[i])
V(replied_to_net_utisak)$followers_cnt[i] <- node_attrs_replied_to_utisak$followers_count[index]
V(replied_to_net_utisak)$friends_cnt[i] <- node_attrs_replied_to_utisak$friends_count[index]
V(replied_to_net_utisak)$posts_cnt[i] <- node_attrs_replied_to_utisak$statuses_count[index]
}
summary(replied_to_net_utisak)
summary(V(replied_to_net_utisak)$followers_cnt)
# koristimo funkciju sa SNA kursa, vec prethodno koriscenu za mrezu mention_net
# ona pravi cvorove na grafu tako da su velicinom proprcionalni broju pratilaca korisnika
source('SNA_custom_functions.R')
friends_for_color_replied_to_utisak <- attr_based_color_gradient(log1p(V(replied_to_net_utisak)$friends_cnt),
c('white','steelblue2'))
# vektor na osnovu broja pratilaca za racunanje velicine cvora
followers_for_size_replied_to_utisak <- log1p(V(replied_to_net_utisak)$followers_cnt)
# plot
plot(replied_to_net_utisak,
layout = layout_with_lgl(replied_to_net_utisak),
edge.arrow.size=0.3,
vertex.label = NA,
vertex.size = followers_for_size_replied_to_utisak,
vertex.color = friends_for_color_replied_to_utisak,
main = "Mreza UN na tviteru prema odnosu replied_to: \nboja cvora oznacava broj prijatelja, a velicina broj pratilaca")
#
# VISNETWORK: vizualizacija mreze replied_to za utisak nedelje
#
library(visNetwork)
r_net_comp_utisak <- components(replied_to_net_utisak, mode = 'weak')
str(r_net_comp_utisak)
# najveca komponenta:
giant_comp_replied_to_utisak_size <- max(r_net_comp_utisak$csize)
giant_comp_replied_to_utisak_index <- which(r_net_comp_utisak$csize == giant_comp_replied_to_utisak_size)
# izdvajamo najvecu komponentu iz grafa replied_to_net_utisak
giant_comp_replied_to_utisak <- induced_subgraph(replied_to_net_utisak,
vids = V(replied_to_net_utisak)[r_net_comp_utisak$membership==giant_comp_replied_to_utisak_index])
summary(giant_comp_replied_to_utisak)
is_connected(giant_comp_replied_to_utisak, mode = 'weak')
# koristimo attribute friends_cnt i followers_cnt i njihove boje i velicine
gc_colors_replied_to_utisak <- attr_based_color_gradient(log1p(V(giant_comp_replied_to_utisak)$friends_cnt), c('white','steelblue4'))
gc_size_replied_to_utisak <- log1p(V(giant_comp_replied_to_utisak)$followers_cnt)
set.seed(2501)
plot(giant_comp_replied_to_utisak,
layout = layout_with_dh(giant_comp_replied_to_utisak),
edge.arrow.size=0.3,
vertex.label = NA,
vertex.size = gc_size_replied_to_utisak,
vertex.color = gc_colors_replied_to_utisak,
main = "Najveca komponenta u mrezi replied_to za Utisak nedelje")
# vizualizacija grafa
nodes_df_replied_to_utisak <- data.frame(id=V(giant_comp_replied_to_utisak)$name, stringsAsFactors = FALSE)
head(nodes_df_replied_to_utisak)
edges_df_replied_to_utisak <- data.frame(as_edgelist(giant_comp_replied_to_utisak), stringsAsFactors = FALSE)
colnames(edges_df_replied_to_utisak) <- c('from', 'to')
visNetwork(nodes = nodes_df_replied_to_utisak, edges = edges_df_replied_to_utisak,
main="Najveca komponenta replied_to mreze za Utisak nedelje")
#
nodes_df_replied_to_utisak$color <- gc_colors_replied_to_utisak
nodes_df_replied_to_utisak$size <- 12 + gc_size_replied_to_utisak
head(nodes_df_replied_to_utisak)
#
edges_df_replied_to_utisak$width <- 1 + (E(giant_comp_replied_to_utisak)$reply_to_tie / 3)
edges_df_replied_to_utisak$color <- 'slategray3'
edges_df_replied_to_utisak$smooth <- TRUE
edges_df_replied_to_utisak$arrows <- 'to'
head(edges_df_replied_to_utisak)
visNetwork(nodes = nodes_df_replied_to_utisak,
edges = edges_df_replied_to_utisak,
main="Najveca komponenta replied_to mreze za Utisak nedelje ",
footer = "Boja oznacava broj prijatelja, a velicina cvora broj pratilaca")
nodes_df_replied_to_utisak$shadow <- FALSE
nodes_df_replied_to_utisak$title <- nodes_df_replied_to_utisak$id
nodes_df_replied_to_utisak$borderWidth <- 1
nodes_df_replied_to_utisak <- nodes_df_replied_to_utisak %>% select(-color)
nodes_df_replied_to_utisak$color.background <- gc_colors_replied_to_utisak
nodes_df_replied_to_utisak$color.border <- "blue"
nodes_df_replied_to_utisak$color.highlight.background <- "orange"
nodes_df_replied_to_utisak$color.highlight.border <- "red"
visnet <- visNetwork(nodes = nodes_df_replied_to_utisak, edges = edges_df_replied_to_utisak,
main="Najveca komponenta replied_to mreze za Utisak nedelje",
footer = "Boja oznacava broj prijatelja, a velicina cvora broj pratilaca")
visnet


# pocetak

library(rtweet)
library(httpuv)
library(tidyr)
library(visNetwork)
library(igraph)
library(ggplot2)
library(visNetwork)
library(dplyr)

# mreza HT za Hit Tvit
# rad sa grafovima
# biramo samo relevantne kolone
hittvit10tweets_users <- hittvit_10_tweets %>%
select(screen_name, reply_to_screen_name, mentions_screen_name) %>%
rename(sender=screen_name, replied_to=reply_to_screen_name, mentioned=mentions_screen_name)
glimpse(hittvit10tweets_users)
# Neke vrednosti 'replied_to' i 'mentioned' ne postoje, proveravamo koliko ih je takvih:
length(which(is.na(hittvit10tweets_users$replied_to)==TRUE))
length(which(is.na(hittvit10tweets_users$mentioned)))
# Uzimamo samo tvitove u kojima je neko odgovorio drugom korisniku
# ili ga spomenuo
hittvit10tweets_users <- hittvit10tweets_users %>%
filter( is.na(replied_to)==FALSE | is.na(mentioned)==FALSE )
View(hittvit10tweets_users)
nrow(hittvit10tweets_users)
# radimo operaciju unnest za kolonu 'mentioned'
# Svaki element liste ide u nov red operacijom unnest
hittvit10tweets_users <- unnest(hittvit10tweets_users, mentioned)
View(hittvit10tweets_users)
# Pretvaramo hittvit10tweets_users u dataframe zbog daljeg rada sa grafovima
# Pravimo 2 edge liste: jednu za relaciju 'reply_to' drugu za relaciju 'mentioned'
replied_to_edgelist_hittvit <- hittvit10tweets_users %>%
select(-mentioned) %>%              # bez kolone 'mentioned'
filter(complete.cases(.)) %>%       # iskljucimo redove koji nemaju vrednost, tj. Imaju vrednost NA
group_by(sender, replied_to) %>%    # redovi se spajaju po vrednostima sender I replied_to
summarise(weight = n()) %>%         # kolika je velicina svake grupe (veza izmedju kolona sender I replied_to)
ungroup()
head(replied_to_edgelist_hittvit, n=10)
# izmedju kojih parova cvorova je komunikacija najveca (sortiramo po velicini grupe tj. weight):
replied_to_edgelist_hittvit %>%
arrange(desc(weight)) %>%
head(n=10)
# isto radimo za kolonu 'mentioned'
mentioned_edgelist_hittvit <- hittvit10tweets_users %>%
select(-replied_to) %>%
filter(complete.cases(.)) %>%
group_by(sender, mentioned) %>%
summarise(weight = n()) %>%
ungroup()
head(mentioned_edgelist_hittvit, n=10)
# gde se najcesce vidi ova veza (sortiranje po vrednosti weight):
mentioned_edgelist_hittvit %>%
arrange(desc(weight)) %>%
head(n=10)
# Cvorovi u mrezama su jedinstvene vrednosti za korisnike
# jedinstvene vrednosti u replied_to edgelist
reply_to_unique_hittvit <- union(replied_to_edgelist_hittvit$sender, replied_to_edgelist_hittvit$replied_to)
reply_to_unique_hittvit <- with(replied_to_edgelist_hittvit, union(sender, replied_to))
length(reply_to_unique_hittvit)
# jedinstvene vrednosti u mentioned edgelist
mention_unique_hittvit <- with(mentioned_edgelist_hittvit, union(sender, mentioned))
length(mention_unique_hittvit)
summary(replied_to_edgelist_hittvit$weight)
summary(mentioned_edgelist_hittvit$weight)
# Dodajemo jos podataka o korisnicima (senders).
# Neke smo vec dobili (hittvit_10_tweets)
glimpse(hittvit_10_tweets)
all_senders_hittvit <- union(mentioned_edgelist_hittvit$sender,
replied_to_edgelist_hittvit$sender)
senders_data_hittvit <- hittvit_10_tweets %>%
filter(screen_name %in% all_senders_hittvit) %>%
users_data() %>%                          # funkcija paketa rtweet za uzimanje podataka iz dataset-a
distinct(user_id, .keep_all = TRUE)
glimpse(senders_data_hittvit)
# Skupljamo podatke za “alters”, tj. korisnike koji su mentioned / replied_to
# za koje alters nemamo podatke
no_data_alters_hittvit <- setdiff(union(mention_unique_hittvit, reply_to_unique_hittvit), all_senders_hittvit)
length(no_data_alters_hittvit)
# koristimo funkciju paketa rtweet lookup_users da prikupimo podatke o njima
alters_data_hittvit <- lookup_users(no_data_alters_hittvit)
# cuvamo ove podatke
saveRDS(alters_data_hittvit, "data/alters_data_hittvit.RData")
glimpse(alters_data_hittvit)
# uzimamo samo podatke o korisnicima, bez njihovih tvitova
# prethodna funkcija je vratila I tvitova korisnika
alters_data_hittvit <- users_data(alters_data_hittvit)
# provera da li nekome fale podaci
missing_alter_hittvit <- setdiff(no_data_alters_hittvit, alters_data_hittvit$screen_name)
length(missing_alter_hittvit)
mentioned_edgelist_hittvit %>%
filter(!mentioned %in% missing_alter_hittvit) %>%
rename(ego=sender, alter=mentioned, mention_tie=weight) %>%
saveRDS(file = "data/mentions_edgelist_#hittvit.RData")
replied_to_edgelist_hittvit %>%
filter(!replied_to %in% missing_alter_hittvit) %>%
rename(ego=sender, alter=replied_to, reply_to_tie=weight) %>%
saveRDS(file = "data/replied_to_edgelist_hittvit_#hittvit.RData")
saveRDS(senders_data_hittvit, file = "data/ego_data_#hittvit.RData")
saveRDS(alters_data_hittvit, file = "data/alter_data_#hittvit.RData")
##
# MREZE KORISNIKA na osnovu relacije mentioned
##
# edge list za pravljenje mreze na osnovu relacije 'mentioned'
mention_edgelist_hittvit <- readRDS("data/mentions_edgelist_#hittvit.RData")
summary(mention_edgelist_hittvit$mention_tie)
# pravimo usmerenu mrezu (directed net)
mention_net_hittvit <- graph_from_data_frame(mention_edgelist_hittvit)
summary(mention_net_hittvit)
# proveravamo gustinu mreze
edge_density(mention_net_hittvit)
plot(mention_net_hittvit,
layout = layout_with_lgl(mention_net_hittvit),
edge.arrow.size=0.3,
vertex.size = 5,
vertex.label = NA)
# dodajemo neke nove vrednosti cvorovima
# pravimo funkciju get_user_attrs() koja prima:
# 1) podatke o korisnicima dobijene funkcijom paketa rtweet users_data(),
# 2) vektor korisnickih imena onih korisnika koji su nam relevantni
# funkcija vraca data frame od 4 promenljive (kolone):
# screen_name, followers_count, friends_count, and statuses_count
get_user_attrs <- function(twitter_user_data, users_screen_names) {
twitter_user_data %>%
filter(screen_name %in% users_screen_names) %>%
select(screen_name, followers_count, friends_count, statuses_count)
}
# ucitamo podatke o senders: potrebno za dodavanje atributa cvorovima koji su izvori
senders_data_hittvit <- readRDS("data/ego_data_#hittvit.RData")
ego_attrs_mentioned_hittvit <- get_user_attrs(senders_data_hittvit, V(mention_net_hittvit)$name)
glimpse(ego_attrs_mentioned_hittvit)
# isto I za alters: one korisnike koji su spomenuti u tvitu onih koji su senders
alters_data_hittvit <- readRDS("data/alter_data_#hittvit.RData")
alter_attrs_mentioned_hittvit <- get_user_attrs(alters_data_hittvit, V(mention_net_hittvit)$name)
glimpse(alter_attrs_mentioned_hittvit)
# dodeljujemo attribute onima koji su u mrezi 'mentioned'
node_attrs_mentioned_hittvit <- rbind(ego_attrs_mentioned_hittvit, alter_attrs_mentioned_hittvit) %>% # spoj dataframe-ova
distinct(screen_name, .keep_all = TRUE) %>% # uzimamo samo redove koji nemaju duplicate tj. jedinstveni su
arrange(screen_name) # sortiranje prema korisnickom imenu
head(node_attrs_mentioned_hittvit, n=10)
summary(node_attrs_mentioned_hittvit[,-1])
# attribute koji su vektori postavimo najpre na 0
V(mention_net_hittvit)$followers_cnt <- rep(0, vcount(mention_net_hittvit))
V(mention_net_hittvit)$friends_cnt <- rep(0, vcount(mention_net_hittvit))
V(mention_net_hittvit)$posts_cnt <- rep(0, vcount(mention_net_hittvit))
for (i in 1:vcount(mention_net_hittvit)) {
index <- which(node_attrs_mentioned_hittvit$screen_name == V(mention_net_hittvit)$name[i])
V(mention_net_hittvit)$followers_cnt[i] <- node_attrs_mentioned_hittvit$followers_count[index]
V(mention_net_hittvit)$friends_cnt[i] <- node_attrs_mentioned_hittvit$friends_count[index]
V(mention_net_hittvit)$posts_cnt[i] <- node_attrs_mentioned_hittvit$statuses_count[index]
}
summary(mention_net_hittvit)
summary(V(mention_net_hittvit)$followers_cnt)
# koristimo funkciju sa SNA kursa
# ona pravi cvorove na grafu tako da su velicinom proprcionalni broju pratilaca korisnika
source('SNA_custom_functions.R')
friends_for_color_mentioned_hittvit <- attr_based_color_gradient(log1p(V(mention_net_hittvit)$friends_cnt),
c('gold','steelblue3'))
# vektor na osnovu broja pratilaca za racunanje velicine cvora
followers_for_size_mentioned_hittvit <- log1p(V(mention_net_hittvit)$followers_cnt)
# plot
plot(mention_net_hittvit,
layout = layout_with_lgl(mention_net_hittvit),
edge.arrow.size=0.3,
vertex.label = NA,
vertex.size = followers_for_size_mentioned_hittvit,
vertex.color = friends_for_color_mentioned_hittvit,
main = "Mreza HT na tviteru: boja cvora oznacava broj prijatelja, a velicina broj pratilaca")
library(visNetwork)
# VISNETWORK: vizualizacija mreze mentioned za Hit Tvit
m_net_comp_hittvit <- components(mention_net_hittvit, mode = 'weak')
str(m_net_comp_hittvit)
# najveca komponenta:
giant_comp_mentioned_hittvit_size <- max(m_net_comp_hittvit$csize)
giant_comp_mentioned_hittvit_index <- which(m_net_comp_hittvit$csize == giant_comp_mentioned_hittvit_size)
# izdvajamo najvecu komponentu iz grafa mention_net_hittvit
giant_comp_mentioned_hittvit <- induced_subgraph(mention_net_hittvit,
vids = V(mention_net_hittvit)[m_net_comp_hittvit$membership==giant_comp_mentioned_hittvit_index])
summary(giant_comp_mentioned_hittvit)
is_connected(giant_comp_mentioned_hittvit, mode = 'weak')
# koristimo attribute friends_cnt i followers_cnt i njihove boje i velicine
gc_colors_mentioned_hittvit <- attr_based_color_gradient(log1p(V(giant_comp_mentioned_hittvit)$friends_cnt), c('gold','steelblue3'))
gc_size_mentioned_hittvit <- log1p(V(giant_comp_mentioned_hittvit)$followers_cnt)
set.seed(2501)
plot(giant_comp_mentioned_hittvit,
layout = layout_with_dh(giant_comp_mentioned_hittvit),
edge.arrow.size=0.3,
vertex.label = NA,
vertex.size = gc_size_mentioned_hittvit,
vertex.color = gc_colors_mentioned_hittvit,
main = "Najveca komponenta u mrezi mentioned za Hit Tvit")
# vizualizacija grafa
nodes_df_mentioned_hittvit <- data.frame(id=V(giant_comp_mentioned_hittvit)$name, stringsAsFactors = FALSE)
head(nodes_df_mentioned_hittvit)
edges_df_mentioned_hittvit <- data.frame(as_edgelist(giant_comp_mentioned_hittvit), stringsAsFactors = FALSE)
colnames(edges_df_mentioned_hittvit) <- c('from', 'to')
visNetwork(nodes = nodes_df_mentioned_hittvit, edges = edges_df_mentioned_hittvit,
main="Najveca komponenta mentioned mreze za Hit Tvit")
#
nodes_df_mentioned_hittvit$color <- gc_colors_mentioned_hittvit
nodes_df_mentioned_hittvit$size <- 12 + gc_size_mentioned_hittvit
head(nodes_df_mentioned_hittvit)
#
edges_df_mentioned_hittvit$width <- 1 + (E(giant_comp_mentioned_hittvit)$mention_tie / 3)
edges_df_mentioned_hittvit$color <- 'slategray3'
edges_df_mentioned_hittvit$smooth <- TRUE
edges_df_mentioned_hittvit$arrows <- 'to'
head(edges_df_mentioned_hittvit)
visNetwork(nodes = nodes_df_mentioned_hittvit,
edges = edges_df_mentioned_hittvit,
main="Najveca komponenta mentioned mreze za Hit Tvit",
footer = "Boja oznacava broj prijatelja, a velicina cvora broj pratilaca")
nodes_df_mentioned_hittvit$shadow <- FALSE
nodes_df_mentioned_hittvit$title <- nodes_df_mentioned_hittvit$id
nodes_df_mentioned_hittvit$borderWidth <- 1.5
nodes_df_mentioned_hittvit <- nodes_df_mentioned_hittvit %>% select(-color)
nodes_df_mentioned_hittvit$color.background <- gc_colors_mentioned_hittvit
nodes_df_mentioned_hittvit$color.border <- "black"
nodes_df_mentioned_hittvit$color.highlight.background <- "orange"
nodes_df_mentioned_hittvit$color.highlight.border <- "darkred"
visnet <- visNetwork(nodes = nodes_df_mentioned_hittvit, edges = edges_df_mentioned_hittvit,
main="Najveca komponenta mentioned mreze za Hit Tvit",
footer = "Boja oznacava broj prijatelja, a velicina cvora broj pratilaca")
visnet
#
# MREZE KORISNIKA na osnovu relacije replied_to
##
# edge list za pravljenje mreze na osnovu relacije 'replied_to'
replied_to_edgelist_hittvit <- readRDS("data/replied_to_edgelist_hittvit_#hittvit.RData")
summary(replied_to_edgelist_hittvit$reply_to_tie)
# pravimo usmerenu mrezu (directed net)
replied_to_net_hittvit <- graph_from_data_frame(replied_to_edgelist_hittvit)
summary(replied_to_net_hittvit)
# proveravamo gustinu mreze
edge_density(replied_to_net_hittvit)
plot(replied_to_net_hittvit,
layout = layout_with_lgl(replied_to_net_hittvit),
edge.arrow.size=0.3,
vertex.size = 5,
vertex.label = NA)
# dodajemo neke nove vrednosti cvorovima
# koristimo prethodno napravljenu funkciju get_user_attrs() koja prima:
# 1) podatke o korisnicima dobijene funkcijom paketa rtweet users_data(),
# 2) vektor korisnickih imena onih korisnika koji su nam relevantni
# funkcija vraca data frame od 4 promenljive (kolone):
# screen_name, followers_count, friends_count, and statuses_count
# ucitamo podatke o senders: potrebno za dodavanje atributa cvorovima koji su izvori
senders_data_hittvit <- readRDS("data/ego_data_#hittvit.RData")
ego_attrs_replied_to_hittvit <- get_user_attrs(senders_data_hittvit, V(replied_to_net_hittvit)$name)
glimpse(ego_attrs_replied_to_hittvit)
# isto i za alters: one korisnike kojima je odgovoreno u tvitu
alters_data_hittvit <- readRDS("data/alter_data_#hittvit.RData")
alter_attrs_replied_to_hittvit <- get_user_attrs(alters_data_hittvit, V(replied_to_net_hittvit)$name)
glimpse(alter_attrs_replied_to_hittvit)
# dodeljujemo attribute onima koji su u mrezi 'replied_to_net'
node_attrs_replied_to_hittvit <- rbind(ego_attrs_replied_to_hittvit, alter_attrs_replied_to_hittvit) %>% # spoj dataframe-ova
distinct(screen_name, .keep_all = TRUE) %>% # uzimamo samo redove koji nemaju duplicate tj. jedinstveni su
arrange(screen_name) # sortiranje prema korisnickom imenu
head(node_attrs_replied_to_hittvit, n=10)
summary(node_attrs_replied_to_hittvit[,-1])
# attribute koji su vektori postavimo najpre na 0
V(replied_to_net_hittvit)$followers_cnt <- rep(0, vcount(replied_to_net_hittvit))
V(replied_to_net_hittvit)$friends_cnt <- rep(0, vcount(replied_to_net_hittvit))
V(replied_to_net_hittvit)$posts_cnt <- rep(0, vcount(replied_to_net_hittvit))
for (i in 1:vcount(replied_to_net_hittvit)) {
index <- which(node_attrs_replied_to_hittvit$screen_name == V(replied_to_net_hittvit)$name[i])
V(replied_to_net_hittvit)$followers_cnt[i] <- node_attrs_replied_to_hittvit$followers_count[index]
V(replied_to_net_hittvit)$friends_cnt[i] <- node_attrs_replied_to_hittvit$friends_count[index]
V(replied_to_net_hittvit)$posts_cnt[i] <- node_attrs_replied_to_hittvit$statuses_count[index]
}
summary(replied_to_net_hittvit)
summary(V(replied_to_net_hittvit)$followers_cnt)
# koristimo funkciju sa SNA kursa, vec prethodno koriscenu za mrezu mention_net
# ona pravi cvorove na grafu tako da su velicinom proprcionalni broju pratilaca korisnika
source('SNA_custom_functions.R')
friends_for_color_replied_to_hittvit <- attr_based_color_gradient(log1p(V(replied_to_net_hittvit)$friends_cnt),
c('white','steelblue2'))
# vektor na osnovu broja pratilaca za racunanje velicine cvora
followers_for_size_replied_to_hittvit <- log1p(V(replied_to_net_hittvit)$followers_cnt)
# plot
plot(replied_to_net_hittvit,
layout = layout_with_lgl(replied_to_net_hittvit),
edge.arrow.size=0.3,
vertex.label = NA,
vertex.size = followers_for_size_replied_to_hittvit,
vertex.color = friends_for_color_replied_to_hittvit,
main = "Mreza HT na tviteru prema odnosu replied_to: \nboja cvora oznacava broj prijatelja, a velicina broj pratilaca")
# VISNETWORK: vizualizacija mreze replied_to za Hit Tvit
library(visNetwork)
r_net_comp_hittvit <- components(replied_to_net_hittvit, mode = 'weak')
str(r_net_comp_hittvit)
# najveca komponenta:
giant_comp_replied_to_hittvit_size <- max(r_net_comp_hittvit$csize)
giant_comp_replied_to_hittvit_index <- which(r_net_comp_hittvit$csize == giant_comp_replied_to_hittvit_size)
# izdvajamo najvecu komponentu iz grafa replied_to_net_hittvit
giant_comp_replied_to_hittvit <- induced_subgraph(replied_to_net_hittvit,
vids = V(replied_to_net_hittvit)[r_net_comp_hittvit$membership==giant_comp_replied_to_hittvit_index])
summary(giant_comp_replied_to_hittvit)
is_connected(giant_comp_replied_to_hittvit, mode = 'weak')
# koristimo attribute friends_cnt i followers_cnt i njihove boje i velicine
gc_colors_replied_to_hittvit <- attr_based_color_gradient(log1p(V(giant_comp_replied_to_hittvit)$friends_cnt), c('white','steelblue4'))
gc_size_replied_to_hittvit <- log1p(V(giant_comp_replied_to_hittvit)$followers_cnt)
set.seed(2501)
plot(giant_comp_replied_to_hittvit,
layout = layout_with_dh(giant_comp_replied_to_hittvit),
edge.arrow.size=0.3,
vertex.label = NA,
vertex.size = gc_size_replied_to_hittvit,
vertex.color = gc_colors_replied_to_hittvit,
main = "Najveca komponenta u mrezi replied_to za Hit Tvit")
# vizualizacija grafa
nodes_df_replied_to_hittvit <- data.frame(id=V(giant_comp_replied_to_hittvit)$name, stringsAsFactors = FALSE)
head(nodes_df_replied_to_hittvit)
edges_df_replied_to_hittvit <- data.frame(as_edgelist(giant_comp_replied_to_hittvit), stringsAsFactors = FALSE)
colnames(edges_df_replied_to_hittvit) <- c('from', 'to')
visNetwork(nodes = nodes_df_replied_to_hittvit, edges = edges_df_replied_to_hittvit,
main="Najveca komponenta replied_to mreze za Hit Tvit")
#
nodes_df_replied_to_hittvit$color <- gc_colors_replied_to_hittvit
nodes_df_replied_to_hittvit$size <- 12 + gc_size_replied_to_hittvit
head(nodes_df_replied_to_hittvit)
#
edges_df_replied_to_hittvit$width <- 1 + (E(giant_comp_replied_to_hittvit)$reply_to_tie / 3)
edges_df_replied_to_hittvit$color <- 'slategray3'
edges_df_replied_to_hittvit$smooth <- TRUE
edges_df_replied_to_hittvit$arrows <- 'to'
head(edges_df_replied_to_hittvit)
visNetwork(nodes = nodes_df_replied_to_hittvit,
edges = edges_df_replied_to_hittvit,
main="Najveca komponenta replied_to mreze za Hit Tvit",
footer = "Boja oznacava broj prijatelja, a velicina cvora broj pratilaca")
nodes_df_replied_to_hittvit$shadow <- FALSE
nodes_df_replied_to_hittvit$title <- nodes_df_replied_to_hittvit$id
nodes_df_replied_to_hittvit$borderWidth <- 1
nodes_df_replied_to_hittvit <- nodes_df_replied_to_hittvit %>% select(-color)
nodes_df_replied_to_hittvit$color.background <- gc_colors_replied_to_hittvit
nodes_df_replied_to_hittvit$color.border <- "blue"
nodes_df_replied_to_hittvit$color.highlight.background <- "orange"
nodes_df_replied_to_hittvit$color.highlight.border <- "red"
visnet <- visNetwork(nodes = nodes_df_replied_to_hittvit, edges = edges_df_replied_to_hittvit,
main="Najveca komponenta replied_to mreze za Hit Tvit",
footer = "Boja oznacava broj prijatelja, a velicina cvora broj pratilaca")
visnet
